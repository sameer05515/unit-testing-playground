{"version":3,"file":"custom/graphql-consume/gql-demo-0.2.js","mappings":"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","sources":["webpack://dependency-injection-practice-with-es6-modules-and-webpack-dev-server/./src/scripts/custom/graphql-consume/gql-demo-0.2.js"],"sourcesContent":["// GraphQL Fetch Function\r\nconst fetchGraphQL = async (query, variables = {}) => {\r\n    const response = await fetch(\"http://localhost:4000/graphql\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ query, variables }),\r\n    });\r\n\r\n    const responseBody = await response.json();\r\n\r\n    if (!response.ok || responseBody.errors) {\r\n        const errorMessage = responseBody.errors\r\n            ? responseBody.errors.map(error => error.message).join(\", \")\r\n            : response.statusText;\r\n        throw new Error(`GraphQL error: ${errorMessage}`);\r\n    }\r\n\r\n    return responseBody.data;\r\n};\r\n\r\n// Example usage\r\nconst query = `\r\n    query GetResume($uniqueId: String!) {\r\n        getResume(uniqueId: $uniqueId) {\r\n            uniqueId\r\n            introduction\r\n            processedDetails {\r\n                metadata\r\n                textType\r\n            }\r\n            companies {\r\n                name\r\n                processedDetails {\r\n                    metadata\r\n                    textType\r\n                }\r\n                projects {\r\n                    name\r\n                    processedDetails {\r\n                        metadata\r\n                        textType\r\n                    }\r\n                    uniqueId\r\n                }\r\n                uniqueId\r\n            }\r\n            educations {\r\n                uniqueId\r\n                name\r\n                processedDetails {\r\n                    metadata\r\n                    textType\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst variables = { uniqueId: \"0f20819b-c89e-4bdc-8613-5a9a99445533\" };\r\n\r\n// UI Elements Creation\r\nconst createUIElements = () => {\r\n    const container = document.createElement('div');\r\n    const headerContainer = document.createElement('div');\r\n    const resumeContainer = document.createElement('div');\r\n    const fetchBtn = document.createElement('button');\r\n    const togglePreBtn = document.createElement('button');\r\n    const preEl = document.createElement('pre');\r\n\r\n    fetchBtn.innerText = 'Fetch Data';\r\n    togglePreBtn.innerText = 'Show';\r\n\r\n    headerContainer.append(fetchBtn, togglePreBtn, preEl);\r\n    container.append(headerContainer, resumeContainer);\r\n    document.body.append(container);\r\n\r\n    return { fetchBtn, togglePreBtn, preEl, resumeContainer };\r\n};\r\n\r\nconst { fetchBtn, togglePreBtn, preEl, resumeContainer } = createUIElements();\r\n\r\nlet showPre = false;\r\n\r\n// Fetch Data Function\r\nconst fetchData = async () => {\r\n    try {\r\n        const data = await fetchGraphQL(query, variables);\r\n        console.log('GraphQL data:', data);\r\n        preEl.innerHTML = JSON.stringify(data, null, 2);\r\n        preEl.style.display = 'none';\r\n        togglePreBtn.innerText = 'Show';\r\n        renderResume(data);\r\n    } catch (error) {\r\n        console.error('GraphQL error:', error);\r\n    }\r\n};\r\n\r\nfetchBtn.addEventListener('click', fetchData);\r\n\r\ntogglePreBtn.addEventListener('click', () => {\r\n    showPre = !showPre;\r\n    preEl.style.display = showPre ? 'block' : 'none';\r\n    togglePreBtn.innerText = showPre ? 'Hide' : 'Show';\r\n});\r\n\r\n// Create Personal Details Card\r\nconst createPersonalDetailsCard = (details, parentElement) => {\r\n    const card = document.createElement('div');\r\n    card.style.cssText = `\r\n        border: 1px solid #ccc;\r\n        border-radius: 8px;\r\n        padding: 16px;\r\n        margin: 16px;\r\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n        max-width: 300px;\r\n        background-color: #f9f9f9;\r\n    `;\r\n\r\n    card.innerHTML = `\r\n        <h2>${details.name}</h2>\r\n        <p>Date of Birth: ${details.dateOfBirth}</p>\r\n        <div>\r\n            <h3>Emails:</h3>\r\n            <ul>${details.emails.map(email => `<li>${email}</li>`).join('')}</ul>\r\n        </div>\r\n        <div>\r\n            <h3>Contact Numbers:</h3>\r\n            <ul>${details.contactNumbers.map(contact => `<li>${contact}</li>`).join('')}</ul>\r\n        </div>\r\n    `;\r\n\r\n    parentElement.appendChild(card);\r\n};\r\n\r\n// Create Expertise Card\r\nconst createExpertiseCard = (expertises, parentElement) => {\r\n    const card = document.createElement('div');\r\n    card.style.cssText = `\r\n        border: 1px solid #ccc;\r\n        border-radius: 8px;\r\n        padding: 16px;\r\n        margin: 16px;\r\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n        max-width: 300px;\r\n        background-color: #f9f9f9;\r\n    `;\r\n\r\n    card.innerHTML = `\r\n        <h2>Expertises</h2>\r\n        <ul>${expertises.map(exp => `\r\n            <li>\r\n                <p><strong>Stream:</strong> ${exp.stream}</p>\r\n                <p><strong>Duration:</strong> ${exp.duration}</p>\r\n            </li>\r\n        `).join('')}</ul>\r\n    `;\r\n\r\n    parentElement.appendChild(card);\r\n};\r\n\r\n// Render Resume Function\r\nconst renderResume = (resumeData) => {\r\n    resumeContainer.innerHTML = '';\r\n    createPersonalDetailsCard(resumeData.getResume.processedDetails.metadata.personalDetails, resumeContainer);\r\n    createExpertiseCard(resumeData.getResume.processedDetails.metadata.expertises, resumeContainer);\r\n};\r\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","fetchGraphQL","_ref","_callee","query","variables","response","responseBody","errorMessage","_args","_callee$","_context","undefined","fetch","headers","body","JSON","stringify","json","ok","errors","map","error","message","join","statusText","concat","data","_x","uniqueId","createUIElements","container","document","createElement","headerContainer","resumeContainer","fetchBtn","togglePreBtn","preEl","innerText","append","_createUIElements","showPre","fetchData","_ref2","_callee2","_callee2$","_context2","console","log","innerHTML","style","display","renderResume","t0","addEventListener","createPersonalDetailsCard","details","parentElement","card","cssText","dateOfBirth","emails","email","contactNumbers","contact","appendChild","createExpertiseCard","expertises","exp","stream","duration","resumeData","getResume","processedDetails","metadata","personalDetails"],"sourceRoot":""}